language: java
env: 
  global:
  - DISPLAY=:99
services:
  - xvfb
before_install:
- "export PLUGIN_VERSION=`grep '<version>' pom.xml -m 1 | cut -d'>' -f 2 | cut -d'<' -f 1`"
- "export IS_SNAPSHOT=`grep '<version>' pom.xml -m 1 | cut -d'>' -f 2 | cut -d'<' -f 1 | cut -d'-' -f 2`"
script: mvn clean verify
jdk: 
- openjdk11
cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle/
after_success:
- if [[ $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_BRANCH == "master" ]]; then 
  mvn sonar:sonar -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey="camel-lsp-client-eclipse" -Dsonar.projectName="Eclipse Client for Apache Camel Language Server";
 fi
- if [[ $IS_SNAPSHOT == "SNAPSHOT" ]]; then
  export DEPLOY_REPO_ROOT=nightly;
 else
  export DEPLOY_REPO_ROOT=stable;
 fi
- mkdir com.github.camel-tooling.lsp.eclipse.updatesite/target/updatesite/
- mkdir com.github.camel-tooling.lsp.eclipse.updatesite/target/updatesite/${DEPLOY_REPO_ROOT}/
- mv com.github.camel-tooling.lsp.eclipse.updatesite/target/repository/* com.github.camel-tooling.lsp.eclipse.updatesite/target/updatesite/${DEPLOY_REPO_ROOT}/
- find website/* -name 'index.html' | xargs perl -pi -e "s/##VERSION##/${PLUGIN_VERSION}/g"
- find website/* -name 'index.html' | xargs perl -pi -e "s/##TYPE##/${DEPLOY_REPO_ROOT}/g"
- cp website/index.html com.github.camel-tooling.lsp.eclipse.updatesite/target/updatesite/${DEPLOY_REPO_ROOT}/
branches:
  except:
    - /^dependabot.*$/
addons:
  sonarcloud:
    organization: "camel-tooling"
    branches:
      - master
deploy:
  - provider: releases
    api_key:  ${DEPLOY_TOKEN}
    file: com.github.camel-tooling.lsp.eclipse.updatesite/target/com.github.camel-tooling.eclipse.updatesite-${PLUGIN_VERSION}.zip
    skip_cleanup: true
    overwrite: true
    on:
      branch:  master
  - provider: script
    script: bash .travis_publish
    skip_cleanup: true
    overwrite: true
    on:
      branch:  master
  - provider: script
    script: bash .travis_publish
    skip_cleanup: true
    overwrite: true
    on:
      tags: true

