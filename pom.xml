<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.camel-tooling.lsp</groupId>
	<artifactId>eclipse</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>${base.name}</name>
	<packaging>pom</packaging>
	
	<properties>
		<tycho.version>1.1.0</tycho.version>
		<base.name>Eclipse Client for Apache Camel Language Server</base.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- compiler settings -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- sonar properties -->
		<sonar.code.codeCoveragePlugin>jacoco</sonar.code.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.test.inclusions>**/*Test.*,**/test/**/*,**/*IT.*</sonar.test.inclusions>
		<!-- points to the target folder of the global parent project -->
		<sonar.jacoco.reportPath>../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>../../../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPaths>${sonar.jacoco.reportPath},${sonar.jacoco.itReportPath}</sonar.jacoco.reportPaths>
		<!-- by default, don't run the deploy-to-jboss.org profile for all poms; set this to false in *updatesite/pom.xml -->
		<maven.deploy.skip>true</maven.deploy.skip>
		<skipDeployToJBossOrg>true</skipDeployToJBossOrg>
		<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
		<filemgmtJbossOrg>10.5.105.197</filemgmtJbossOrg>
		<jbossTychoPluginsVersion>1.1.0</jbossTychoPluginsVersion>
		<jbosstoolsRelengPublishVersion>4.6.0-SNAPSHOT</jbosstoolsRelengPublishVersion>
	</properties>

	<modules>
		<module>camel-lsp-target-platform</module>
		<module>com.github.camel-tooling.lsp.eclipse.client</module>
		<module>com.github.cameltooling.lsp.eclipse.client.feature</module>
		<module>com.github.camel-tooling.lsp.eclipse.client.tests.integration</module>
		<module>com.github.camel-tooling.lsp.eclipse.updatesite</module>
	</modules>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<target>
						<artifact>
							<groupId>${project.groupId}</groupId>
							<artifactId>camel-lsp-target-platform</artifactId>
							<version>${project.version}</version>
						</artifact>
					</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<configuration>
					<append>true</append>
					<includes>com.github.cameltooling.lsp.*,com.github.cameltooling.*</includes>
				</configuration>
				<executions>
					<execution>
						<id>agent-for-ut</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>agent-for-it</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<argLine>${argLine}</argLine>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<!-- make sure lib dir is removed after clean to avoid "dirty" build -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${basedir}/libs</directory>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jboss.tools.tycho-plugins</groupId>
					<artifactId>repository-utils</artifactId>
					<version>${jbossTychoPluginsVersion}</version>
				</plugin>
				<plugin>
					<groupId>org.jboss.tools.releng</groupId>
					<artifactId>jbosstools-releng-publish</artifactId>
					<version>${jbosstoolsRelengPublishVersion}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>deploy-to-jboss.org</id>
			<activation>
				<property>
					<name>skipDeployToJBossOrg</name>
					<value>false</value>
				</property>
			</activation>
			<properties>
				<deployScriptDir>${project.build.directory}/releng-scripts</deployScriptDir>
				<deployScript>${deployScriptDir}/publish/rsync.sh</deployScript>
				<deploySourceFolder>${project.build.directory}/repository</deploySourceFolder>
				<deployDestination>tools@${filemgmtJbossOrg}:downloads_htdocs/jbosstools</deployDestination>
				<deployTargetFolder>snapshots/builds/${project.artifactId}/${BUILD_TIMESTAMP}-B${BUILD_NUMBER}/all/repo/</deployTargetFolder>
				<deployNumbuildstokeep>2</deployNumbuildstokeep>
				<deployNumbuildstolink>2</deployNumbuildstolink>
				<deployThreshholdwhendelete>2</deployThreshholdwhendelete>
				<!-- https://issues.jboss.org/browse/JBIDE-21012 by default, don't push an update site zip to JBoss Nexus, only to download.jboss.org or devstudio.redhat.com -->
				<maven.deploy.skip>true</maven.deploy.skip>
				<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>deploy-releng-scripts</id>
								<goals>
									<goal>unpack</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.jboss.tools.releng</groupId>
											<artifactId>jbosstools-releng-publish</artifactId>
											<version>${jbosstoolsRelengPublishVersion}</version>
											<type>tar.gz</type>
											<outputDirectory>${deployScriptDir}</outputDirectory>
										</artifactItem>
									</artifactItems>
									<skip>${skipDeployToJBossOrg}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.3.2</version>
						<configuration>
							<executable>${deployScript}</executable>
						</configuration>
						<executions>
							<execution>
								<id>deploy-snapshot-build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<arguments>
										<arg>-DESTINATION</arg>
										<arg>${deployDestination}</arg>
										<arg>-s</arg>
										<arg>${deploySourceFolder}</arg>
										<arg>-t</arg>
										<arg>${deployTargetFolder}</arg>
										<arg>-k</arg>
										<arg>${deployNumbuildstokeep}</arg>
										<arg>-l</arg>
										<arg>${deployNumbuildstolink}</arg>
										<arg>-a</arg>
										<arg>${deployThreshholdwhendelete}</arg>
									</arguments>
									<skip>${skipDeployToJBossOrg}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
